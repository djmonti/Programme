PROGRAM Zahlenratespiel
  
  INTEGER          :: l, r, n, i = 0, maxi
  REAL             :: l_alt, r_alt
  CHARACTER(LEN=1) :: a,j = 'j'
  
  DO WHILE (ja(j))
    i = 0
    
    !! Eingabe zweier ganzer Zahlen l,r bis l<r
    DO
      WRITE(*,*) 'Bite geben Sie das Intervall ein mit |I|>2'
      READ(*,*) l_alt, r_alt
      IF (r_alt - l_alt + 1 > 2) EXIT
    END DO
    
    l = INT(l_alt)
    r = INT(r_alt)
  
    DO
      i = i + 1
      
      IF (r < l) THEN !! Beispiel mit n>5 und n<6
        WRITE(*,*) 'Die Aussage war widersprüchlich. Programm beendet.'
        STOP
      END IF
            
      !! Ausgabe einer Zahl aus Intervall
      IF ((r - l == 1) .AND. (a == '>')) THEN !! Bedingung für n = obere Grenze
        n = r
      ELSE
        n = ((r - l)) / 2 + l  !! n ist Mitte des Intervalls
      END IF
      
      WRITE(*,*) 'Ist die Zahl', n, '?'
      
      !! Eingabe des Mitspielers >,<,=
      DO 
        WRITE(*,*) 'Spieler? [<,>,=]'
        READ(*,*) a
        
        IF (antw(a)) THEN !! n ist richtig
          IF (((l /= l_alt) .AND. (n < l)) .OR. ((r /= r_alt) .AND. (n > r))) THEN
          !! Wenn neue Grenze definiert und n außerhalb
            WRITE(*,*) 'Die Aussage war widersprüchlich. Programm beendet.'
            STOP
          ELSE
            EXIT
          END IF
        END IF
        
        IF (a == '<') THEN !! n < 
          IF ((n >= l) .AND. (n <= r)) THEN
            r = n - 1
            EXIT
          ELSE
            WRITE(*,*) 'Die Aussage war widersprüchlich. Programm beendet.'
            STOP
          END IF
        END IF
        
        IF (a == '>') THEN
          IF ((n >= l) .AND. (n <= r)) THEN
            l = n + 1
            EXIT
          ELSE
            WRITE(*,*) 'Die Aussage war widersprüchlich. Programm beendet.'
            STOP
          END IF
        END IF
      END DO
      IF (antw(a)) EXIT
    END DO  
   
    
    !! Ausgabe der benötigten Versuche bei erraten
    WRITE(*,*) 'Es wurde(n)       ', i, 'Versuch(e) benötigt.'
    
    !! Maximale Anzahl der Versuche
    maxi = INT((log(r_alt - l_alt) + 1)/log(2.0))
    WRITE(*,*) 'Mögliche Versuche:', maxi, '.'
    
    !! Abfrage, ob nochmal spielen
    DO  
      WRITE(*,*) 'Erneut Spielen? [j/n]'
      READ(*,*) j
      IF ((j == 'j') .OR. (j == 'n')) EXIT
    END DO
  END DO  
  
  CONTAINS

  FUNCTION antw(x)
    CHARACTER(LEN=1) :: x
    LOGICAL          :: antw
    antw = (x == '=')
  END FUNCTION
  
  FUNCTION ja(y)
    CHARACTER(LEN=1) :: y
    LOGICAL          :: ja
    ja = (y == 'j')
  END FUNCTION
END PROGRAM
